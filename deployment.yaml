apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APPLICATION_NAME}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ${APPLICATION_NAME}
    spec:
      containers:
        - name: ${APPLICATION_NAME}
          image: eribyteofficial/crud-service
          imagePullPolicy: Always
          ports:
            - containerPort: 46468
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: hibernate.default_schema
              valueFrom:
                configMapKeyRef:
                  name: ${CONFIG_NAME}
                  key: schema
            - name: spring.datasource.driver-class-name
              valueFrom:
                configMapKeyRef:
                  name: ${CONFIG_NAME}
                  key: spring.datasource.driver-class-name
            - name: spring.datasource.url
              valueFrom:
                configMapKeyRef:
                  name: ${CONFIG_NAME}
                  key: spring.datasource.url
            - name: spring.jpa.database-platform
              valueFrom:
                configMapKeyRef:
                  name: ${CONFIG_NAME}
                  key: spring.jpa.database-platform
            - name: spring.datasource.username
              valueFrom:
                configMapKeyRef:
                  name: ${CONFIG_NAME}
                  key: spring.datasource.username
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_NAME}
                  key: spring.datasource.password
            - name: security.delete.code
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_NAME}
                  key: security.delete.code
            - name: security.oauth.password
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_NAME}
                  key: security.oauth.password
          # Health check configuration
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 46468
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 46468
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          # Resource limits
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

  selector:
    matchLabels:
      app: ${APPLICATION_NAME}
---
# Internal ClusterIP Service for Eribot to access CRUD service
apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_NAME}-internal
  labels:
    app: ${APPLICATION_NAME}
    service-type: internal
spec:
  type: ClusterIP
  selector:
    app: ${APPLICATION_NAME}
  ports:
    - name: http
      protocol: TCP
      port: 46468
      targetPort: 46468
---
# External LoadBalancer Service for outside access
apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_NAME}
  annotations:
    # Explicitly specify internet-facing
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app: ${APPLICATION_NAME}
  ports:
    - name: http
      protocol: TCP
      port: 46468
      targetPort: 46468
